#compdef grunt
# -----------------------------------------------------------------------------
# Description
# -----------
#
#  Completion script for grunt
#   (https://github.com/gruntjs/grunt)
#   (https://github.com/gruntjs/grunt-cli)
#
# -----------------------------------------------------------------------------
# Authors
# -------
#
#  * Yonchu <https://github.com/yonchu>
#
# -----------------------------------------------------------------------------

_grunt() {
    local state
    local -a tasks

    _arguments \
    '(- 1 *)'{-h,--help}'[help]' \
    '(--version,-V)'{--version,-V}'[Print the grunt version. Combine with --verbose for more info.]' \
    '(--base)--base[Specify an alternate base path. By default, all file paths are relative to the Gruntfile. (grunt.file.setBase) *]' \
    '(--no-color)--no-color[Disable colored output.]' \
    '(--gruntfile)--gruntfile[Specify an alternate Gruntfile. By default, grunt looks in the current or parent directories for the nearest Gruntfile.js or Gruntfile.coffee file.]' \
    '(--stack)--stack[Print a stack trace when exiting with a warning or fatal error.]' \
    '(--force,-f)'{--force,-f}"[A way to force your way past warnings. Want a suggestion? Don't use this option, fix your code.]" \
    '(--tasks)--tasks[Additional directory paths to scan for task and "extra" files. (grunt.loadTasks) *]' \
    '(--npm)--npm[Npm-installed grunt plugins to scan for task and "extra" files. (grunt.loadNpmTasks) *]' \
    '(--no-write)--no-write[Disable writing files (dry run).]' \
    '(--verbose,-v)'{--verbose,-v}'[Verbose mode. A lot more information output.]' \
    '(--completion)--completion[Output shell auto-completion rules. See the grunt-cli documentation for more information.]' \
    '*: :->tasks' \
    && return

    case $state in
        tasks)
            tasks=(${(@f)"$(__grunt_tasks)"})
            if [ ${#tasks} -eq 0  ]; then
                return
            fi
            _values 'grunt task' "${tasks[@]}" || return 1
        ;;
    esac

    return
}

__grunt_tasks() {
    local gruntfile
    gruntfile="$(__grunt_gruntfile)" || return 1
    grunt --help --no-color --gruntfile "$gruntfile" 2>/dev/null \
        | grep 'Available tasks' -A 100 \
        | grep '^ ' \
        | grep -v '.*--' \
        | sed -e 's/^[[:blank:]]*//' -e 's/[[:blank:]]*$//' \
        | sed -e 's/  /[/' -e 's/$/]/'
}

__grunt_gruntfile() {
    local gruntfile
    local curpath="$PWD"
    while [ "$curpath" ]; do
        for gruntfile in "$curpath/"{G,g}runtfile.{js,coffee}; do
            if [[ -e "$gruntfile" ]]; then
                echo "$gruntfile"
                return
            fi
        done
        curpath="${curpath%/*}"
    done
    return 1
}

_grunt "$@"
